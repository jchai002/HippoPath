.impress-enabled {
  .step {
    position: relative;
    width: 900px;
    padding: 40px;
    margin: 20px auto;

    -webkit-box-sizing: border-box;
    -moz-box-sizing:    border-box;
    -ms-box-sizing:     border-box;
    -o-box-sizing:      border-box;
    box-sizing:         border-box;

    font-family: 'PT Serif', georgia, serif;
    font-size: 48px;
    line-height: 1.5;
  }

  /*
  ... and we enhance the styles for impress.js.

  Basically we remove the margin and make inactive steps a little bit transparent.
  */
  .impress-enabled .step {
    margin: 0;
    opacity: 0.3;

    -webkit-transition: opacity 1s;
    -moz-transition:    opacity 1s;
    -ms-transition:     opacity 1s;
    -o-transition:      opacity 1s;
    transition:         opacity 1s;
  }

  .impress-enabled .step.active { opacity: 1 }

  /*
  These 'slide' step styles were heavily inspired by HTML5 Slides:
  http://html5slides.googlecode.com/svn/trunk/styles.css

  ;)

  They cover everything what you see on first three steps of the demo.
  */
  .slide {
    display: block;

    width: 900px;
    height: 700px;
    padding: 40px 60px;

    background-color: white;
    border: 1px solid rgba(0, 0, 0, .3);
    border-radius: 10px;
    box-shadow: 0 2px 6px rgba(0, 0, 0, .1);

    color: rgb(102, 102, 102);
    text-shadow: 0 2px 2px rgba(0, 0, 0, .1);

    font-family: 'Open Sans', Arial, sans-serif;
    font-size: 30px;
    line-height: 36px;
    letter-spacing: -1px;
  }

  .slide q {
    display: block;
    font-size: 50px;
    line-height: 72px;

    margin-top: 100px;
  }

  .slide q strong {
    white-space: nowrap;
  }

  /*
  And the "it's in 3D" step again brings some 3D typography - just for fun.

  Because we want to position <span> elements in 3D we set transform-style to
  `preserve-3d` on the paragraph.
  It is not needed by webkit browsers, but it is in Firefox. It's hard to say
  which behaviour is correct as 3D transforms spec is not very clear about it.
  */
  p {
    -webkit-transform-style: preserve-3d;
    -moz-transform-style:    preserve-3d; /* Y U need this Firefox?! */
    -ms-transform-style:     preserve-3d;
    -o-transform-style:      preserve-3d;
    transform-style:         preserve-3d;
  }

  /*
  Below we position each word separately along Z axis and we want it to transition
  to default position in 0.5s when the step gets `present` class.

  Quite a simple idea, but lot's of styles and prefixes.
  */
  span,
  b {
    display: inline-block;
    -webkit-transform: translateZ(40px);
    -moz-transform:    translateZ(40px);
    -ms-transform:     translateZ(40px);
    -o-transform:      translateZ(40px);
    transform:        translateZ(40px);

    -webkit-transition: 0.5s;
    -moz-transition:    0.5s;
    -ms-transition:     0.5s;
    -o-transition:      0.5s;
    transition:         0.5s;
  }

  #its-in-3d.present span,
  #its-in-3d.present b {
    -webkit-transform: translateZ(0px);
    -moz-transform:    translateZ(0px);
    -ms-transform:     translateZ(0px);
    -o-transform:      translateZ(0px);
    transform:         translateZ(0px);
  }
}
/*
And as the last thing there is a workaround for quite strange bug.
It happens a lot in Chrome. I don't remember if I've seen it in Firefox.

Sometimes the element positioned in 3D (especially when it's moved back
along Z axis) is not clickable, because it falls 'behind' the <body>
element.

To prevent this, I decided to make <body> non clickable by setting
pointer-events property to `none` value.
Value if this property is inherited, so to make everything else clickable
I bring it back on the #impress element.

If you want to know more about `pointer-events` here are some docs:
https://developer.mozilla.org/en/CSS/pointer-events

There is one very important thing to notice about this workaround - it makes
everything 'unclickable' except what's in #impress element.

So use it wisely ... or don't use at all.
*/
.impress-enabled          { pointer-events: none }
.impress-enabled #impress { pointer-events: auto }

/*
There is one funny thing I just realized.

Thanks to this workaround above everything except #impress element is invisible
for click events. That means that the hint element is also not clickable.
So basically all of this transforms and delayed transitions trickery was probably
not needed at all...

But it was fun to learn about it, wasn't it?
*/

/*
That's all I have for you in this file.
Thanks for reading. I hope you enjoyed it at least as much as I enjoyed writing it
for you.
*/
